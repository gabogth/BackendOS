// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using nest.core.infraestructura.db.DbContext.Provider;

#nullable disable

namespace nest.core.security.Migrations.MySql
{
    [DbContext(typeof(DbContextMySql))]
    partial class DbContextMySqlModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ActivoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CentroDeCostosId")
                        .HasColumnType("int");

                    b.Property<int?>("DepreciacionMeses")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("ProductoLoteId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("activo_audit", "patrimonial");
                });

            modelBuilder.Entity("AlmacenAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DistritoId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitud")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Longitud")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("almacen_audit", "logistica");
                });

            modelBuilder.Entity("ApplicationRoleAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("AspNetRoles_audit", "security");
                });

            modelBuilder.Entity("ApplicationUserAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("AspNetUsers_audit", "security");
                });

            modelBuilder.Entity("CargoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("cargo_audit", "rrhh");
                });

            modelBuilder.Entity("CentroDeCostosAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Codigo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EsFinal")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("PadreId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("centro_de_costos_audit", "costos");
                });

            modelBuilder.Entity("ContratoCabeceraAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("ContratoTipoId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Resumen")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("contrato_cabecera_audit", "legal");
                });

            modelBuilder.Entity("ContratoDetalleAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaFirma")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaUltimaNotificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Firmo")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("contrato_detalle_audit", "legal");
                });

            modelBuilder.Entity("ContratoPersonalAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<long>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("EstructuraOrganizacionalId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoBruto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("ContratoCabeceraId");

                    b.ToTable("contrato_personal_audit", "legal");
                });

            modelBuilder.Entity("ContratoTipoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Detalle")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("contrato_tipo_audit", "legal");
                });

            modelBuilder.Entity("CuentaContableAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("CuentaContableTipoId")
                        .HasColumnType("int");

                    b.Property<string>("ES")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("PadreId")
                        .HasColumnType("int");

                    b.Property<bool>("PermiteMovimiento")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("cuenta_contable_audit", "contabilidad");
                });

            modelBuilder.Entity("CuentaContableTipoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("cuenta_contable_tipo_audit", "contabilidad");
                });

            modelBuilder.Entity("CuentaCorrienteAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("CuentaContableId")
                        .HasColumnType("int");

                    b.Property<string>("CuentaNumero")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("EntidadFinancieraId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("cuenta_corriente_audit", "finanzas");
                });

            modelBuilder.Entity("DepartamentoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("departamento_audit", "dbo");
                });

            modelBuilder.Entity("DistritoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("distrito_audit", "dbo");
                });

            modelBuilder.Entity("DocumentoIdentidadTipoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("documento_identidad_tipo_audit", "dbo");
                });

            modelBuilder.Entity("DocumentoTipoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CodigoEstatal")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("documento_tipo_audit", "dbo");
                });

            modelBuilder.Entity("EntidadFinancieraAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EsEfectivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("entidad_financiera_audit", "finanzas");
                });

            modelBuilder.Entity("EstructuraOrganizacionalAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EstructuraOrganizacionalTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Final")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UsuarioRegistro")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("estructura_organizacional_audit", "organizacion");
                });

            modelBuilder.Entity("EstructuraOrganizacionalTipoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("estructura_organizacional_tipo_audit", "organizacion");
                });

            modelBuilder.Entity("FinancieroCabeceraAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DocumentoTipoGenId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint unsigned");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumentoGen")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<short>("OrigenFinancieroId")
                        .HasColumnType("smallint");

                    b.Property<int>("PuntoFinancieroId")
                        .HasColumnType("int");

                    b.Property<string>("SerieDocumentoGen")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TerceroGenId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("financiero_cabecera_audit", "finanzas");
                });

            modelBuilder.Entity("FinancieroDetalleAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Concepto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CuentaCorrienteId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentoTipoId")
                        .HasColumnType("int");

                    b.Property<string>("ES")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("FinancieroCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<short>("Item")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SerieDocumento")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("financiero_detalle_audit", "finanzas");
                });

            modelBuilder.Entity("FinancieroLogisticaAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("FinancieroDetalleId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("InventarioCabeceraId")
                        .HasColumnType("bigint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("financiero_logistica_audit", "finanzas");
                });

            modelBuilder.Entity("FinancieroOrdenServicioAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("FinancieroDetalleId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OrdenServicioCabeceraId")
                        .HasColumnType("bigint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("financiero_orden_servicio_audit", "finanzas");
                });

            modelBuilder.Entity("FormularioAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Controlador")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icono")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("formulario_audit", "aplicacion");
                });

            modelBuilder.Entity("GrupoHorarioAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DiferenciaDia")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("HoraEntrada")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("HoraSalida")
                        .HasColumnType("time(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("grupo_horario_audit", "rrhh");
                });

            modelBuilder.Entity("GrupoTrabajoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Nombre")
                        .HasColumnType("int");

                    b.Property<int>("NombreCorto")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("grupo_trabajo_audit", "rrhh");
                });

            modelBuilder.Entity("GrupoTrabajoPersonaAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EsLider")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("GrupoTrabajoId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("grupo_trabajo_persona_audit", "rrhh");
                });

            modelBuilder.Entity("HorarioCabeceraAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("horario_cabecera_audit", "rrhh");
                });

            modelBuilder.Entity("HorarioDetalleAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("DiaSemana")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("GrupoHorarioId")
                        .HasColumnType("int");

                    b.Property<int>("HorarioCabeceraId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("horario_detalle_audit", "rrhh");
                });

            modelBuilder.Entity("IdentityRoleClaim`1Audit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("AspNetRoleClaims_audit", "security");
                });

            modelBuilder.Entity("IdentityUserClaim`1Audit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("AspNetUserClaims_audit", "security");
                });

            modelBuilder.Entity("IdentityUserLogin`1Audit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("LoginProvider", "ProviderKey");

                    b.ToTable("AspNetUserLogins_audit", "security");
                });

            modelBuilder.Entity("IdentityUserRole`1Audit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("UserId", "RoleId");

                    b.ToTable("AspNetUserRoles_audit", "security");
                });

            modelBuilder.Entity("IdentityUserToken`1Audit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Value")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens_audit", "security");
                });

            modelBuilder.Entity("InventarioCabeceraAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<int>("AlmacenId")
                        .HasColumnType("int");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DocumentoNumero")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DocumentoSerie")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DocumentoTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("LogisticaTransaccionId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("inventario_cabecera_audit", "logistica");
                });

            modelBuilder.Entity("InventarioDetalleAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("InventarioCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<short>("Item")
                        .HasColumnType("smallint");

                    b.Property<string>("Nota")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<long>("ProductoLoteId")
                        .HasColumnType("bigint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("inventario_detalle_audit", "logistica");
                });

            modelBuilder.Entity("LaborAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("labor_audit", "mantto");
                });

            modelBuilder.Entity("LicenciaConducirAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Nivel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("licencia_conducir_audit", "dbo");
                });

            modelBuilder.Entity("LogisticaTransaccionAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ES")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("logistica_transaccion_audit", "logistica");
                });

            modelBuilder.Entity("MantenimientoTipoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("mantenimiento_tipo_audit", "mantto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "aplicacion-home",
                            ClaimValue = "true",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "aplicacion-formulario",
                            ClaimValue = "true",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "seguridad-rol",
                            ClaimValue = "true",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "seguridad-rol-usuario",
                            ClaimValue = "true",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "seguridad-rol-formulario",
                            ClaimValue = "true",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "seguridad-usuario",
                            ClaimValue = "true",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "aplicacion-home",
                            ClaimValue = "true",
                            RoleId = "2"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "aplicacion-formulario",
                            ClaimValue = "true",
                            RoleId = "2"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "seguridad-rol",
                            ClaimValue = "true",
                            RoleId = "2"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "seguridad-rol-usuario",
                            ClaimValue = "true",
                            RoleId = "2"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "seguridad-rol-formulario",
                            ClaimValue = "true",
                            RoleId = "2"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "seguridad-usuario",
                            ClaimValue = "true",
                            RoleId = "2"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "security");

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "2",
                            RoleId = "2"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Value")
                        .HasMaxLength(-1)
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "security");
                });

            modelBuilder.Entity("ModuloAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Controlador")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RutaImagen")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("modulo_audit", "aplicacion");
                });

            modelBuilder.Entity("MonedaAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Simbolo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Sufix")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("moneda_audit", "finanzas");
                });

            modelBuilder.Entity("OrdenServicioCabeceraAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CodigoOrdenInterna")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CodigoReferencial")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<short>("OrdenServicioTipoId")
                        .HasColumnType("smallint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("orden_servicio_cabecera_audit", "mantto");
                });

            modelBuilder.Entity("OrdenServicioMantenimientoExternoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<long>("ActaConformidadId")
                        .HasColumnType("bigint");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CPI")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ClientePlannerId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteSupervisorId")
                        .HasColumnType("int");

                    b.Property<long?>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("CotizacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntregaCorreo")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaEntregaInforme")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFianzaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFianzaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPagoFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRecepcionFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRecepcionHES")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaVencimientoFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("LicitacionCodigo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<short>("MantenimientoTipoId")
                        .HasColumnType("smallint");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoBruto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MontoFianza")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MontoNeto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("NumeroFactura")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("NumeroHES")
                        .HasColumnType("int");

                    b.Property<string>("ReporteCalidad")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ReporteMedicion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("ValorFacturadoNeto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("orden_servicio_mantenimiento_externo_audit", "mantto");
                });

            modelBuilder.Entity("OrdenServicioTipoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("orden_servicio_tipo_audit", "mantto");
                });

            modelBuilder.Entity("OrdenTrabajoCabeceraAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("FechaCompromiso")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("GrupoTrabajoId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("OrdenServicioCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrdenTrabajoCabeceraPadreId")
                        .HasColumnType("bigint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("orden_trabajo_cabecera_audit", "mantto");
                });

            modelBuilder.Entity("OrdenTrabajoDetalleActivoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<long>("ActivoId")
                        .HasColumnType("bigint");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("orden_trabajo_detalle_activo_audit", "mantto");
                });

            modelBuilder.Entity("OrdenTrabajoDetalleAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("HorasEjecutadas")
                        .HasColumnType("int");

                    b.Property<int>("HorasProyectadas")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("LaborId")
                        .HasColumnType("int");

                    b.Property<long>("OrdenTrabajoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<long>("UbicacionTecnicaId")
                        .HasColumnType("bigint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("orden_trabajo_detalle_audit", "mantto");
                });

            modelBuilder.Entity("OrdenTrabajoPersonalAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EsLider")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OrdenTrabajoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("orden_trabajo_personal_audit", "mantto");
                });

            modelBuilder.Entity("OrigenFinancieroAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Naturaleza")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("origen_financiero_audit", "finanzas");
                });

            modelBuilder.Entity("PaisAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CodigoIso")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CodigoTelefono")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("pais_audit", "dbo");
                });

            modelBuilder.Entity("PersonaAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Celular")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Correo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DistritoId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentoIdentidad")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("DocumentoIdentidadTipoId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte?>("LicenciaConducirId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombres")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("SexoId")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("persona_audit", "dbo");
                });

            modelBuilder.Entity("PersonalAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("HorarioCabeceraId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("MarcaAsistencia")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("PersonalEstadoId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("SuperiorId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("personal_audit", "rrhh");
                });

            modelBuilder.Entity("PersonalEstadoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("personal_estado_audit", "rrhh");
                });

            modelBuilder.Entity("ProductoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Factor")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("PuedeGenerarNuevosLotes")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UnidadMedidaCompraId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedidaConsumoId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("producto_audit", "logistica");
                });

            modelBuilder.Entity("ProductoLoteAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("InventarioDetalleCreacionId")
                        .HasColumnType("bigint");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PrecioConsumo")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("SerialId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("producto_lote_audit", "logistica");
                });

            modelBuilder.Entity("ProvinciaAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("provincia_audit", "dbo");
                });

            modelBuilder.Entity("PuntoFinancieroAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("punto_financiero_audit", "finanzas");
                });

            modelBuilder.Entity("SexoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("sexo_audit", "dbo");
                });

            modelBuilder.Entity("TerceroAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("CuentaContablePorCobrarId")
                        .HasColumnType("int");

                    b.Property<int>("CuentaContablePorPagarId")
                        .HasColumnType("int");

                    b.Property<string>("DireccionFiscal")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DocumentoIdentidadFinanciero")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("DocumentoIdentidadTipoFinancieroId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("tercero_audit", "finanzas");
                });

            modelBuilder.Entity("UbicacionActivoAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<long>("ActivoId")
                        .HasColumnType("bigint");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Comentario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("UbicacionTecnicaId")
                        .HasColumnType("bigint");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("ubicacion_activo_audit", "patrimonial");
                });

            modelBuilder.Entity("UbicacionTecnicaAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("PadreId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("ubicacion_tecnica_audit", "patrimonial");
                });

            modelBuilder.Entity("UnidadMedidaAudit", b =>
                {
                    b.Property<long>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("AuditAcceptLanguage")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditApp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAppVersion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditAssemblyName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditContentType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditCurrentCulture")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("AuditFecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditHost")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditIpRemoteOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("AuditIsHttps")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AuditMethod")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditOrigin")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditPlatform")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditProtocol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditQueryString")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditReferer")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditRequestId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUserAgent")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AuditUsuario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("AuditId");

                    b.HasIndex("Id");

                    b.ToTable("unidad_medida_audit", "logistica");
                });

            modelBuilder.Entity("nest.core.dominio.Aplicacion.Formulario.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Controlador")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(-1)
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icono")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClaimType")
                        .IsUnique();

                    b.HasIndex("ModuloId");

                    b.HasIndex("ParentId");

                    b.ToTable("formulario", "aplicacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Index",
                            ClaimType = "aplicacion-home",
                            Controlador = "Seguridad",
                            Descripcion = "",
                            Estado = true,
                            Icono = "home",
                            ModuloId = 1,
                            Nombre = "Inicio",
                            NombreCorto = "INICIO",
                            Orden = (short)1
                        },
                        new
                        {
                            Id = 2,
                            Action = "",
                            Controlador = "",
                            Descripcion = "",
                            Estado = true,
                            Icono = "window-restore",
                            ModuloId = 1,
                            Nombre = "Aplicacion",
                            NombreCorto = "APLICACIO",
                            Orden = (short)2
                        },
                        new
                        {
                            Id = 3,
                            Action = "Formulario",
                            ClaimType = "aplicacion-formulario",
                            Controlador = "Seguridad",
                            Descripcion = "",
                            Estado = true,
                            Icono = "table-list",
                            ModuloId = 1,
                            Nombre = "Formulario",
                            NombreCorto = "FORMULARI",
                            Orden = (short)2,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 4,
                            Action = "",
                            Controlador = "",
                            Descripcion = "",
                            Estado = true,
                            Icono = "shield",
                            ModuloId = 1,
                            Nombre = "Seguridad",
                            NombreCorto = "SEGURIDAD",
                            Orden = (short)3
                        },
                        new
                        {
                            Id = 5,
                            Action = "Rol",
                            ClaimType = "seguridad-rol",
                            Controlador = "Seguridad",
                            Descripcion = "",
                            Estado = true,
                            Icono = "users",
                            ModuloId = 1,
                            Nombre = "Rol",
                            NombreCorto = "ROL",
                            Orden = (short)1,
                            ParentId = 4
                        },
                        new
                        {
                            Id = 6,
                            Action = "RolUsuario",
                            ClaimType = "seguridad-rol-usuario",
                            Controlador = "Seguridad",
                            Descripcion = "",
                            Estado = true,
                            Icono = "users",
                            ModuloId = 1,
                            Nombre = "Rol Usuarios",
                            NombreCorto = "ROLUSER",
                            Orden = (short)2,
                            ParentId = 4
                        },
                        new
                        {
                            Id = 7,
                            Action = "RolFormulario",
                            ClaimType = "seguridad-rol-formulario",
                            Controlador = "Seguridad",
                            Descripcion = "",
                            Estado = true,
                            Icono = "users",
                            ModuloId = 1,
                            Nombre = "Rol Formularios",
                            NombreCorto = "ROLFORM",
                            Orden = (short)3,
                            ParentId = 4
                        },
                        new
                        {
                            Id = 8,
                            Action = "Usuario",
                            ClaimType = "seguridad-usuario",
                            Controlador = "Seguridad",
                            Descripcion = "",
                            Estado = true,
                            Icono = "users",
                            ModuloId = 1,
                            Nombre = "Usuarios",
                            NombreCorto = "USER",
                            Orden = (short)4,
                            ParentId = 4
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Aplicacion.Modulo.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Controlador")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(-1)
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("RutaImagen")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("modulo", "aplicacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Index",
                            Controlador = "Seguridad",
                            Descripcion = "Modulo donde se setean los roles, permisos y menús.",
                            Estado = true,
                            Nombre = "Seguridad",
                            NombreCorto = "SECURITY",
                            RutaImagen = ""
                        },
                        new
                        {
                            Id = 2,
                            Action = "Index",
                            Controlador = "Logistica",
                            Descripcion = "Modulo de inventarios logistica y transferencias.",
                            Estado = true,
                            Nombre = "Logistica",
                            NombreCorto = "LOGISTIC",
                            RutaImagen = ""
                        },
                        new
                        {
                            Id = 3,
                            Action = "Index",
                            Controlador = "VentasHome",
                            Descripcion = "Modulo de facturacion, ventas, caja.",
                            Estado = true,
                            Nombre = "Ventas",
                            NombreCorto = "VENTAS",
                            RutaImagen = ""
                        },
                        new
                        {
                            Id = 4,
                            Action = "Index",
                            Controlador = "Contabilidad",
                            Descripcion = "Modulo de libro diario, asientos, libro mayor.",
                            Estado = true,
                            Nombre = "Contabilidad",
                            NombreCorto = "CONTABIL",
                            RutaImagen = ""
                        },
                        new
                        {
                            Id = 5,
                            Action = "Index",
                            Controlador = "Produccion",
                            Descripcion = "Modulo de producción, recetas, conversiones.",
                            Estado = true,
                            Nombre = "Produccion",
                            NombreCorto = "PRODUCCI",
                            RutaImagen = ""
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Contabilidad.CuentaContableEntities.CuentaContable", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CuentaContableTipoId")
                        .HasColumnType("int");

                    b.Property<string>("ES")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<int?>("PadreId")
                        .HasColumnType("int");

                    b.Property<bool>("PermiteMovimiento")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaContableTipoId");

                    b.HasIndex("PadreId");

                    b.ToTable("cuenta_contable", "contabilidad");
                });

            modelBuilder.Entity("nest.core.dominio.Contabilidad.CuentaContableTipoEntities.CuentaContableTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("cuenta_contable_tipo", "contabilidad");
                });

            modelBuilder.Entity("nest.core.dominio.Corporativo.EstructuraOrganizacionalEntities.EstructuraOrganizacional", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EstructuraOrganizacionalTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Final")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UsuarioRegistro")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EstructuraOrganizacionalTipoId");

                    b.HasIndex("ParentId");

                    b.ToTable("estructura_organizacional", "organizacion");
                });

            modelBuilder.Entity("nest.core.dominio.Corporativo.EstructuraOrganizacionalTipoEntities.EstructuraOrganizacionalTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("estructura_organizacional_tipo", "organizacion");
                });

            modelBuilder.Entity("nest.core.dominio.Costos.CentroDeCostosEntities.CentroDeCostos", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EsFinal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<int?>("PadreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PadreId");

                    b.ToTable("centro_de_costos", "costos");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.ClienteEntities.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CuentaContablePorCobrarId")
                        .HasColumnType("int");

                    b.Property<int>("CuentaContablePorPagarId")
                        .HasColumnType("int");

                    b.Property<string>("DireccionFiscal")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DocumentoIdentidadFinanciero")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("DocumentoIdentidadTipoFinancieroId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaContablePorCobrarId");

                    b.HasIndex("CuentaContablePorPagarId");

                    b.HasIndex("DocumentoIdentidadTipoFinancieroId");

                    b.ToTable("tercero", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.CuentaCorrienteEntities.CuentaCorriente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CuentaContableId")
                        .HasColumnType("int");

                    b.Property<string>("CuentaNumero")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("EntidadFinancieraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaContableId");

                    b.HasIndex("EntidadFinancieraId");

                    b.ToTable("cuenta_corriente", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.EntidadFinancieraEntities.EntidadFinanciera", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EsEfectivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("entidad_financiera", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroCabeceraEntities.FinancieroCabecera", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(-1)
                        .HasColumnType("longtext");

                    b.Property<int>("DocumentoTipoGenId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumentoGen")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<short>("OrigenFinancieroId")
                        .HasColumnType("smallint");

                    b.Property<int>("PuntoFinancieroId")
                        .HasColumnType("int");

                    b.Property<string>("SerieDocumentoGen")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<int>("TerceroGenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoTipoGenId");

                    b.HasIndex("OrigenFinancieroId");

                    b.HasIndex("PuntoFinancieroId");

                    b.HasIndex("TerceroGenId");

                    b.ToTable("financiero_cabecera", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroDetalleEntities.FinancieroDetalle", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Concepto")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("CuentaCorrienteId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentoTipoId")
                        .HasColumnType("int");

                    b.Property<string>("ES")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("FinancieroCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<short>("Item")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("SerieDocumento")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuentaCorrienteId");

                    b.HasIndex("DocumentoTipoId");

                    b.HasIndex("FinancieroCabeceraId");

                    b.HasIndex("TerceroId");

                    b.ToTable("financiero_detalle", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroLogisticaEntities.FinancieroLogistica", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("FinancieroDetalleId")
                        .HasColumnType("bigint");

                    b.Property<long>("InventarioCabeceraId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InventarioCabeceraId");

                    b.HasIndex("FinancieroDetalleId", "InventarioCabeceraId");

                    b.ToTable("financiero_logistica", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroOrdenServicioEntities.FinancieroOrdenServicio", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("FinancieroDetalleId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrdenServicioCabeceraId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrdenServicioCabeceraId");

                    b.HasIndex("FinancieroDetalleId", "OrdenServicioCabeceraId");

                    b.ToTable("financiero_orden_servicio", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.MonedaEntities.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Simbolo")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Sufix")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("moneda", "finanzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "SOLES",
                            NombreCorto = "PEN",
                            Prefix = "S/",
                            Simbolo = "S/",
                            Sufix = "soles"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "DÓLARES",
                            NombreCorto = "USD",
                            Prefix = "$",
                            Simbolo = "$",
                            Sufix = "dólares"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "EUROS",
                            NombreCorto = "EUR",
                            Prefix = "€",
                            Simbolo = "€",
                            Sufix = "euros"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.OrigenFinancieroEntities.OrigenFinanciero", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Naturaleza")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("origen_financiero", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.PuntoFinancieroEntities.PuntoFinanciero", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("punto_financiero", "finanzas");
                });

            modelBuilder.Entity("nest.core.dominio.General.DepartamentoEntites.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("departamento", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Amazonas",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Áncash",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Apurímac",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Arequipa",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Ayacucho",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Cajamarca",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Callao",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Cusco",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Huancavelica",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Huánuco",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Ica",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Junín",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "La Libertad",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Lambayeque",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Lima",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Loreto",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Madre de Dios",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Moquegua",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Pasco",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Piura",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Puno",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "San Martín",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Tacna",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Tumbes",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Ucayali",
                            PaisId = 1
                        });
                });

            modelBuilder.Entity("nest.core.dominio.General.DistritoEntities.Distrito", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("distrito", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Arequipa",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Alto Selva Alegre",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Cayma",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Characato",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Chiguata",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Jacobo Hunter",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "La Joya",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Miraflores",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Mollebaya",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Sabandía",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "San Juan de Siguas",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "San Juan de Tarucani",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Santa Isabel de Siguas",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Santa Rita de Siguas",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Sachaca",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Simón Bolívar",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Tiabaya",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Yanahuara",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Cerro Colorado",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Quequeña",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Yura",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Socabaya",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Polobaya",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Vitor",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "La Unión",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "Santa Teresa",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "Aplao",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Chivay",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 29,
                            Nombre = "Ichuña",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 30,
                            Nombre = "Macate",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 31,
                            Nombre = "Huambo",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 32,
                            Nombre = "Orcopampa",
                            ProvinciaId = 1
                        },
                        new
                        {
                            Id = 33,
                            Nombre = "Chivay",
                            ProvinciaId = 1
                        });
                });

            modelBuilder.Entity("nest.core.dominio.General.DocumentoIdentidadTipoEntities.DocumentoIdentidadTipo", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("documento_identidad_tipo", "dbo");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Nombre = "Documento nacional de identidad",
                            NombreCorto = "DNI"
                        },
                        new
                        {
                            Id = (byte)2,
                            Nombre = "Carnet de extranjería",
                            NombreCorto = "CE"
                        },
                        new
                        {
                            Id = (byte)3,
                            Nombre = "Pasaporte",
                            NombreCorto = "PSX"
                        },
                        new
                        {
                            Id = (byte)4,
                            Nombre = "Permiso temporal de permanencia",
                            NombreCorto = "PTP"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.General.DocumentoTipoEntities.DocumentoTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CodigoEstatal")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("documento_tipo", "dbo");
                });

            modelBuilder.Entity("nest.core.dominio.General.LicenciaConducirEntities.LicenciaConducir", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Nivel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("licencia_conducir", "dbo");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Nivel = (byte)1,
                            Nombre = "AIA"
                        },
                        new
                        {
                            Id = (byte)2,
                            Nivel = (byte)2,
                            Nombre = "AIIA"
                        },
                        new
                        {
                            Id = (byte)3,
                            Nivel = (byte)3,
                            Nombre = "AIIB"
                        },
                        new
                        {
                            Id = (byte)4,
                            Nivel = (byte)4,
                            Nombre = "AIIIA"
                        },
                        new
                        {
                            Id = (byte)5,
                            Nivel = (byte)5,
                            Nombre = "AIIIB"
                        },
                        new
                        {
                            Id = (byte)6,
                            Nivel = (byte)6,
                            Nombre = "AIIIC"
                        },
                        new
                        {
                            Id = (byte)7,
                            Nivel = (byte)7,
                            Nombre = "B1"
                        },
                        new
                        {
                            Id = (byte)8,
                            Nivel = (byte)8,
                            Nombre = "BIIA"
                        },
                        new
                        {
                            Id = (byte)9,
                            Nivel = (byte)9,
                            Nombre = "BIIB"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.General.PaisEntities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CodigoIso")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CodigoTelefono")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("pais", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoIso = "PE",
                            CodigoTelefono = "+51",
                            Nombre = "Perú"
                        },
                        new
                        {
                            Id = 2,
                            CodigoIso = "US",
                            CodigoTelefono = "+1",
                            Nombre = "Estados Unidos"
                        },
                        new
                        {
                            Id = 3,
                            CodigoIso = "MX",
                            CodigoTelefono = "+52",
                            Nombre = "México"
                        },
                        new
                        {
                            Id = 4,
                            CodigoIso = "AR",
                            CodigoTelefono = "+54",
                            Nombre = "Argentina"
                        },
                        new
                        {
                            Id = 5,
                            CodigoIso = "CL",
                            CodigoTelefono = "+56",
                            Nombre = "Chile"
                        },
                        new
                        {
                            Id = 6,
                            CodigoIso = "CO",
                            CodigoTelefono = "+57",
                            Nombre = "Colombia"
                        },
                        new
                        {
                            Id = 7,
                            CodigoIso = "ES",
                            CodigoTelefono = "+34",
                            Nombre = "España"
                        },
                        new
                        {
                            Id = 8,
                            CodigoIso = "BR",
                            CodigoTelefono = "+55",
                            Nombre = "Brasil"
                        },
                        new
                        {
                            Id = 9,
                            CodigoIso = "EC",
                            CodigoTelefono = "+593",
                            Nombre = "Ecuador"
                        },
                        new
                        {
                            Id = 10,
                            CodigoIso = "CA",
                            CodigoTelefono = "+1",
                            Nombre = "Canadá"
                        },
                        new
                        {
                            Id = 11,
                            CodigoIso = "FR",
                            CodigoTelefono = "+33",
                            Nombre = "Francia"
                        },
                        new
                        {
                            Id = 12,
                            CodigoIso = "GB",
                            CodigoTelefono = "+44",
                            Nombre = "Reino Unido"
                        },
                        new
                        {
                            Id = 13,
                            CodigoIso = "IT",
                            CodigoTelefono = "+39",
                            Nombre = "Italia"
                        },
                        new
                        {
                            Id = 14,
                            CodigoIso = "DE",
                            CodigoTelefono = "+49",
                            Nombre = "Alemania"
                        },
                        new
                        {
                            Id = 15,
                            CodigoIso = "JP",
                            CodigoTelefono = "+81",
                            Nombre = "Japón"
                        },
                        new
                        {
                            Id = 16,
                            CodigoIso = "CN",
                            CodigoTelefono = "+86",
                            Nombre = "China"
                        },
                        new
                        {
                            Id = 17,
                            CodigoIso = "IN",
                            CodigoTelefono = "+91",
                            Nombre = "India"
                        },
                        new
                        {
                            Id = 18,
                            CodigoIso = "AU",
                            CodigoTelefono = "+61",
                            Nombre = "Australia"
                        },
                        new
                        {
                            Id = 19,
                            CodigoIso = "ZA",
                            CodigoTelefono = "+27",
                            Nombre = "Sudáfrica"
                        },
                        new
                        {
                            Id = 20,
                            CodigoIso = "NZ",
                            CodigoTelefono = "+64",
                            Nombre = "Nueva Zelanda"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.General.PersonaEntities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Celular")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Correo")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DistritoId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentoIdentidad")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<byte>("DocumentoIdentidadTipoId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<byte?>("LicenciaConducirId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombres")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<byte>("SexoId")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("DistritoId");

                    b.HasIndex("DocumentoIdentidadTipoId");

                    b.HasIndex("LicenciaConducirId");

                    b.HasIndex("SexoId");

                    b.ToTable("persona", "dbo");
                });

            modelBuilder.Entity("nest.core.dominio.General.ProvinciaEntities.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("provincia", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartamentoId = 4,
                            Nombre = "Arequipa"
                        },
                        new
                        {
                            Id = 2,
                            DepartamentoId = 4,
                            Nombre = "Camaná"
                        },
                        new
                        {
                            Id = 3,
                            DepartamentoId = 4,
                            Nombre = "Caravelí"
                        },
                        new
                        {
                            Id = 4,
                            DepartamentoId = 4,
                            Nombre = "Castilla"
                        },
                        new
                        {
                            Id = 5,
                            DepartamentoId = 4,
                            Nombre = "Caylloma"
                        },
                        new
                        {
                            Id = 6,
                            DepartamentoId = 4,
                            Nombre = "Condesuyos"
                        },
                        new
                        {
                            Id = 7,
                            DepartamentoId = 4,
                            Nombre = "Islay"
                        },
                        new
                        {
                            Id = 8,
                            DepartamentoId = 4,
                            Nombre = "La Unión"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.General.SexoEntities.Sexo", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("sexo", "dbo");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Nombre = "Masculino",
                            NombreCorto = "M"
                        },
                        new
                        {
                            Id = (byte)2,
                            Nombre = "Femenino",
                            NombreCorto = "F"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<byte>("ContratoTipoId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(-1)
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Resumen")
                        .HasMaxLength(-1)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContratoTipoId", "Numero")
                        .IsUnique();

                    b.ToTable("contrato_cabecera", "legal");
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoDetalleEntities.ContratoDetalle", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaFirma")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaUltimaNotificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Firmo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("ContratoCabeceraId", "PersonaId")
                        .IsUnique();

                    b.ToTable("contrato_detalle", "legal");
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoPersonalEntities.ContratoPersonal", b =>
                {
                    b.Property<long>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("EstructuraOrganizacionalId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoBruto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("ContratoCabeceraId");

                    b.HasIndex("CargoId");

                    b.HasIndex("EstructuraOrganizacionalId");

                    b.HasIndex("PersonaId");

                    b.ToTable("contrato_personal", "legal");
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoTipoEntities.ContratoTipo", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Detalle")
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("contrato_tipo", "legal");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Detalle = "CONTRATO DE PRESTACION DE SERVICIOS",
                            Nombre = "CONTRATO DE PRESTACION DE SERVICIOS"
                        },
                        new
                        {
                            Id = (byte)2,
                            Detalle = "CONTRATO POR INCREMENTO DE OBRA",
                            Nombre = "CONTRATO POR INCREMENTO DE OBRA"
                        },
                        new
                        {
                            Id = (byte)3,
                            Detalle = "CONTRATACION ADMINISTRATIVA DE SERVICIOS",
                            Nombre = "CAS"
                        },
                        new
                        {
                            Id = (byte)4,
                            Detalle = "RECIBO POR HONORARIOS",
                            Nombre = "RECIBO POR HONORARIOS"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.AlmacenEN.Almacen", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DistritoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitud")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitud")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("DistritoId");

                    b.ToTable("almacen", "logistica");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Direccion = "Av. Default 1",
                            DistritoId = 1,
                            Latitud = 0m,
                            Longitud = 0m,
                            Nombre = "DEFAULT 1",
                            NombreCorto = "DEFAULT1"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Direccion = "Av. Default 2",
                            DistritoId = 1,
                            Latitud = 0m,
                            Longitud = 0m,
                            Nombre = "DEFAULT 2",
                            NombreCorto = "DEFAULT2"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Direccion = "Av. Default 3",
                            DistritoId = 1,
                            Latitud = 0m,
                            Longitud = 0m,
                            Nombre = "DEFAULT 3",
                            NombreCorto = "DEFAULT3"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.LogisticaTransaccion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ES")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("logistica_transaccion", "logistica");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ES = "E",
                            Nombre = "INGRESO POR COMPRA",
                            NombreCorto = "ICOMPRA"
                        },
                        new
                        {
                            Id = 2,
                            ES = "E",
                            Nombre = "INGRESO POR INICIO DE OPERACIONES",
                            NombreCorto = "IOPERAC"
                        },
                        new
                        {
                            Id = 3,
                            ES = "E",
                            Nombre = "INGRESO POR DIFERENCIA DE INVENTARIO",
                            NombreCorto = "IDIFINV"
                        },
                        new
                        {
                            Id = 4,
                            ES = "E",
                            Nombre = "INGRESO POR TRANFERENCIA",
                            NombreCorto = "ITRANSF"
                        },
                        new
                        {
                            Id = 5,
                            ES = "E",
                            Nombre = "INGRESO POR PRODUCCION",
                            NombreCorto = "IPRODUC"
                        },
                        new
                        {
                            Id = 101,
                            ES = "S",
                            Nombre = "SALIDA POR VENTA",
                            NombreCorto = "SVENTA"
                        },
                        new
                        {
                            Id = 102,
                            ES = "S",
                            Nombre = "SALIDA POR CIERRE DE OPERACIONES",
                            NombreCorto = "SOPERAC"
                        },
                        new
                        {
                            Id = 103,
                            ES = "S",
                            Nombre = "SALIDA POR DIFERENCIA DE INVENTARIO",
                            NombreCorto = "SDIFINV"
                        },
                        new
                        {
                            Id = 104,
                            ES = "S",
                            Nombre = "SALIDA POR TRANSFERENCIA",
                            NombreCorto = "STRANSF"
                        },
                        new
                        {
                            Id = 105,
                            ES = "E",
                            Nombre = "SALIDA POR PRODUCCION",
                            NombreCorto = "SPRODUC"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.Producto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Factor")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<bool>("PuedeGenerarNuevosLotes")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UnidadMedidaCompraId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedidaConsumoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadMedidaCompraId");

                    b.HasIndex("UnidadMedidaConsumoId");

                    b.ToTable("producto", "logistica");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.ProductoLote", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("InventarioDetalleCreacionId")
                        .HasColumnType("bigint");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PrecioConsumo")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("SerialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonedaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("producto_lote", "logistica");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.Transaccional.InventarioCabecera", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("AlmacenId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentoNumero")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DocumentoSerie")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DocumentoTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LogisticaTransaccionId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(-1)
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AlmacenId");

                    b.HasIndex("DocumentoTipoId");

                    b.HasIndex("LogisticaTransaccionId");

                    b.ToTable("inventario_cabecera", "logistica");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.Transaccional.InventarioDetalle", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<long>("InventarioCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<short>("Item")
                        .HasColumnType("smallint");

                    b.Property<string>("Nota")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<long>("ProductoLoteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InventarioCabeceraId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoLoteId");

                    b.ToTable("inventario_detalle", "logistica");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.UnidadMedida", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.ToTable("unidad_medida", "logistica");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.LaborEntities.Labor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("labor", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.MantenimientoTipoEntities.MantenimientoTipo", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("mantenimiento_tipo", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenServicioCabeceraEntities.OrdenServicioCabecera", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CodigoOrdenInterna")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CodigoReferencial")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<short>("OrdenServicioTipoId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("OrdenServicioTipoId");

                    b.ToTable("orden_servicio_cabecera", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenServicioMantenimientoExternoEntities.OrdenServicioMantenimientoExterno", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ActaConformidadId")
                        .HasColumnType("bigint");

                    b.Property<string>("CPI")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ClientePlannerId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteSupervisorId")
                        .HasColumnType("int");

                    b.Property<long?>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("CotizacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntregaCorreo")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaEntregaInforme")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFianzaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFianzaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPagoFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRecepcionFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRecepcionHES")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaVencimientoFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LicitacionCodigo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<short>("MantenimientoTipoId")
                        .HasColumnType("smallint");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoBruto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MontoFianza")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MontoNeto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("NumeroFactura")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("NumeroHES")
                        .HasColumnType("int");

                    b.Property<string>("ReporteCalidad")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ReporteMedicion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("ValorFacturadoNeto")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("ActaConformidadId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ClientePlannerId");

                    b.HasIndex("ClienteSupervisorId");

                    b.HasIndex("ContratoCabeceraId");

                    b.HasIndex("MantenimientoTipoId");

                    b.HasIndex("MonedaId");

                    b.ToTable("orden_servicio_mantenimiento_externo", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenServicioTipoEntities.OrdenServicioTipo", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("orden_servicio_tipo", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoCabeceraEntities.OrdenTrabajoCabecera", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("FechaCompromiso")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("GrupoTrabajoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("OrdenServicioCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrdenTrabajoCabeceraPadreId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GrupoTrabajoId");

                    b.HasIndex("OrdenServicioCabeceraId");

                    b.HasIndex("OrdenTrabajoCabeceraPadreId");

                    b.ToTable("orden_trabajo_cabecera", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoDetalleActivoEntities.OrdenTrabajoDetalleActivo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ActivoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivoId");

                    b.ToTable("orden_trabajo_detalle_activo", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoDetalleEntities.OrdenTrabajoDetalle", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("HorasEjecutadas")
                        .HasColumnType("int");

                    b.Property<int>("HorasProyectadas")
                        .HasColumnType("int");

                    b.Property<int>("LaborId")
                        .HasColumnType("int");

                    b.Property<long>("OrdenTrabajoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<long>("UbicacionTecnicaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LaborId");

                    b.HasIndex("OrdenTrabajoCabeceraId");

                    b.HasIndex("UbicacionTecnicaId");

                    b.ToTable("orden_trabajo_detalle", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoPersonalEntities.OrdenTrabajoPersonal", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("EsLider")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("OrdenTrabajoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenTrabajoCabeceraId");

                    b.HasIndex("PersonaId");

                    b.ToTable("orden_trabajo_personal", "mantto");
                });

            modelBuilder.Entity("nest.core.dominio.Patrimonial.ActivoEntities.Activo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int?>("CentroDeCostosId")
                        .HasColumnType("int");

                    b.Property<int?>("DepreciacionMeses")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("ProductoLoteId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CentroDeCostosId");

                    b.HasIndex("ProductoLoteId");

                    b.HasIndex("TerceroId");

                    b.ToTable("activo", "patrimonial");
                });

            modelBuilder.Entity("nest.core.dominio.Patrimonial.UbicacionActivoEntities.UbicacionActivo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ActivoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comentario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UbicacionTecnicaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivoId");

                    b.HasIndex("ContratoCabeceraId");

                    b.HasIndex("UbicacionTecnicaId");

                    b.ToTable("ubicacion_activo", "patrimonial");
                });

            modelBuilder.Entity("nest.core.dominio.Patrimonial.UbicacionTecnicaEntities.UbicacionTecnica", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("PadreId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PadreId");

                    b.HasIndex("TerceroId");

                    b.ToTable("ubicacion_tecnica", "patrimonial");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.CargoEntities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("cargo", "rrhh");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = true,
                            Nombre = "BACKEND SPECIALIST"
                        },
                        new
                        {
                            Id = 2,
                            Estado = true,
                            Nombre = "TEACH LEAD"
                        },
                        new
                        {
                            Id = 3,
                            Estado = true,
                            Nombre = "CONTADOR"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.GrupoHorarioEntities.GrupoHorario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DiferenciaDia")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("HoraEntrada")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("HoraSalida")
                        .HasColumnType("time(6)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("grupo_horario", "rrhh");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.GrupoTrabajoEntities.GrupoTrabajo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Nombre")
                        .HasColumnType("int");

                    b.Property<int>("NombreCorto")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("grupo_trabajo", "rrhh");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.GrupoTrabajoPersonaEntities.GrupoTrabajoPersona", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("EsLider")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("GrupoTrabajoId")
                        .HasColumnType("bigint");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrupoTrabajoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("grupo_trabajo_persona", "rrhh");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.HorarioCabeceraEntities.HorarioCabecera", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("horario_cabecera", "rrhh");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.HorarioDetalleEntities.HorarioDetalle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte>("DiaSemana")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("GrupoHorarioId")
                        .HasColumnType("int");

                    b.Property<int>("HorarioCabeceraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrupoHorarioId");

                    b.HasIndex("HorarioCabeceraId");

                    b.ToTable("horario_detalle", "rrhh");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.PersonalEntities.Personal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<long>("ContratoCabeceraId")
                        .HasColumnType("bigint");

                    b.Property<int>("HorarioCabeceraId")
                        .HasColumnType("int");

                    b.Property<bool>("MarcaAsistencia")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("PersonalEstadoId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("SuperiorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratoCabeceraId");

                    b.HasIndex("HorarioCabeceraId");

                    b.HasIndex("PersonalEstadoId");

                    b.HasIndex("SuperiorId");

                    b.ToTable("personal", "rrhh");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.PersonalEstadoEntities.PersonalEstado", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("personal_estado", "rrhh");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Nombre = "ACTIVO"
                        },
                        new
                        {
                            Id = (byte)2,
                            Nombre = "RENUNCIA"
                        },
                        new
                        {
                            Id = (byte)3,
                            Nombre = "DESPEDIDO"
                        },
                        new
                        {
                            Id = (byte)4,
                            Nombre = "ABANDONO"
                        },
                        new
                        {
                            Id = (byte)5,
                            Nombre = "SUSPENDIDO"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Security.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", "security");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "superadmin",
                            NormalizedName = "SUPERADMIN"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Security.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", "security");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "86354a26-1cc5-4918-9d33-b049f317e4c6",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "ADMIN@ADMIN.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEeIExr86pRBXxafhFYbABge03ZqCG07elyWRluknySUeu0QYQn2AbIwIiLjMFraDQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6632853f-901c-4e10-b69e-2a5e3018b060",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.com"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c0c88fd7-3561-4fdc-a51a-10cd2bce8b2b",
                            Email = "superadmin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@ADMIN.COM",
                            NormalizedUserName = "SUPERADMIN@ADMIN.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKk+GO+B1NIsiNc/9KsK7AcTcO2tYtYYVTAS3O053hE4W+ZIvEw1OF4GAhSMb1X/OA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a25d6514-15b8-4c24-90cd-33de18fc4440",
                            TwoFactorEnabled = false,
                            UserName = "superadmin@admin.com"
                        });
                });

            modelBuilder.Entity("nest.core.dominio.Security.Audit.CorrelativoMaestro", b =>
                {
                    b.Property<string>("Schema")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Table")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("LastValue")
                        .HasColumnType("bigint");

                    b.HasKey("Schema", "Table");

                    b.ToTable("correlativo_maestro", "audit");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("nest.core.dominio.Security.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("nest.core.dominio.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("nest.core.dominio.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("nest.core.dominio.Security.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("nest.core.dominio.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("nest.core.dominio.Aplicacion.Formulario.Formulario", b =>
                {
                    b.HasOne("nest.core.dominio.Aplicacion.Modulo.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Aplicacion.Formulario.Formulario", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Modulo");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("nest.core.dominio.Contabilidad.CuentaContableEntities.CuentaContable", b =>
                {
                    b.HasOne("nest.core.dominio.Contabilidad.CuentaContableTipoEntities.CuentaContableTipo", "CuentaContableTipo")
                        .WithMany()
                        .HasForeignKey("CuentaContableTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Contabilidad.CuentaContableEntities.CuentaContable", "Padre")
                        .WithMany("Children")
                        .HasForeignKey("PadreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CuentaContableTipo");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("nest.core.dominio.Corporativo.EstructuraOrganizacionalEntities.EstructuraOrganizacional", b =>
                {
                    b.HasOne("nest.core.dominio.Corporativo.EstructuraOrganizacionalTipoEntities.EstructuraOrganizacionalTipo", "EstructuraOrganizacionalTipo")
                        .WithMany()
                        .HasForeignKey("EstructuraOrganizacionalTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Corporativo.EstructuraOrganizacionalEntities.EstructuraOrganizacional", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EstructuraOrganizacionalTipo");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("nest.core.dominio.Costos.CentroDeCostosEntities.CentroDeCostos", b =>
                {
                    b.HasOne("nest.core.dominio.Costos.CentroDeCostosEntities.CentroDeCostos", "Padre")
                        .WithMany("Children")
                        .HasForeignKey("PadreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.ClienteEntities.Tercero", b =>
                {
                    b.HasOne("nest.core.dominio.Contabilidad.CuentaContableEntities.CuentaContable", "CuentaContablePorCobrar")
                        .WithMany()
                        .HasForeignKey("CuentaContablePorCobrarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Contabilidad.CuentaContableEntities.CuentaContable", "CuentaContablePorPagar")
                        .WithMany()
                        .HasForeignKey("CuentaContablePorPagarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.DocumentoIdentidadTipoEntities.DocumentoIdentidadTipo", "DocumentoIdentidadTipoFinanciero")
                        .WithMany()
                        .HasForeignKey("DocumentoIdentidadTipoFinancieroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuentaContablePorCobrar");

                    b.Navigation("CuentaContablePorPagar");

                    b.Navigation("DocumentoIdentidadTipoFinanciero");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.CuentaCorrienteEntities.CuentaCorriente", b =>
                {
                    b.HasOne("nest.core.dominio.Contabilidad.CuentaContableEntities.CuentaContable", "CuentaContable")
                        .WithMany()
                        .HasForeignKey("CuentaContableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.EntidadFinancieraEntities.EntidadFinanciera", "EntidadFinanciera")
                        .WithMany()
                        .HasForeignKey("EntidadFinancieraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CuentaContable");

                    b.Navigation("EntidadFinanciera");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroCabeceraEntities.FinancieroCabecera", b =>
                {
                    b.HasOne("nest.core.dominio.General.DocumentoTipoEntities.DocumentoTipo", "DocumentoTipoGen")
                        .WithMany()
                        .HasForeignKey("DocumentoTipoGenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.OrigenFinancieroEntities.OrigenFinanciero", "OrigenFinanciero")
                        .WithMany()
                        .HasForeignKey("OrigenFinancieroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.PuntoFinancieroEntities.PuntoFinanciero", "PuntoFinanciero")
                        .WithMany()
                        .HasForeignKey("PuntoFinancieroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.ClienteEntities.Tercero", "TerceroGen")
                        .WithMany()
                        .HasForeignKey("TerceroGenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocumentoTipoGen");

                    b.Navigation("OrigenFinanciero");

                    b.Navigation("PuntoFinanciero");

                    b.Navigation("TerceroGen");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroDetalleEntities.FinancieroDetalle", b =>
                {
                    b.HasOne("nest.core.dominio.Finanzas.CuentaCorrienteEntities.CuentaCorriente", "CuentaCorriente")
                        .WithMany()
                        .HasForeignKey("CuentaCorrienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.General.DocumentoTipoEntities.DocumentoTipo", "DocumentoTipo")
                        .WithMany()
                        .HasForeignKey("DocumentoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.FinancieroCabeceraEntities.FinancieroCabecera", "FinancieroCabecera")
                        .WithMany("FinancieroDetalles")
                        .HasForeignKey("FinancieroCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.ClienteEntities.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CuentaCorriente");

                    b.Navigation("DocumentoTipo");

                    b.Navigation("FinancieroCabecera");

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroLogisticaEntities.FinancieroLogistica", b =>
                {
                    b.HasOne("nest.core.dominio.Finanzas.FinancieroDetalleEntities.FinancieroDetalle", "FinancieroDetalle")
                        .WithMany()
                        .HasForeignKey("FinancieroDetalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Logistica.Transaccional.InventarioCabecera", "InventarioCabecera")
                        .WithMany()
                        .HasForeignKey("InventarioCabeceraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FinancieroDetalle");

                    b.Navigation("InventarioCabecera");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroOrdenServicioEntities.FinancieroOrdenServicio", b =>
                {
                    b.HasOne("nest.core.dominio.Finanzas.FinancieroDetalleEntities.FinancieroDetalle", "FinancieroDetalle")
                        .WithMany()
                        .HasForeignKey("FinancieroDetalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Mantto.OrdenServicioCabeceraEntities.OrdenServicioCabecera", "OrdenServicioCabecera")
                        .WithMany()
                        .HasForeignKey("OrdenServicioCabeceraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FinancieroDetalle");

                    b.Navigation("OrdenServicioCabecera");
                });

            modelBuilder.Entity("nest.core.dominio.General.DepartamentoEntites.Departamento", b =>
                {
                    b.HasOne("nest.core.dominio.General.PaisEntities.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("nest.core.dominio.General.DistritoEntities.Distrito", b =>
                {
                    b.HasOne("nest.core.dominio.General.ProvinciaEntities.Provincia", "Provincia")
                        .WithMany("Distritos")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("nest.core.dominio.General.PersonaEntities.Persona", b =>
                {
                    b.HasOne("nest.core.dominio.General.DistritoEntities.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.DocumentoIdentidadTipoEntities.DocumentoIdentidadTipo", "DocumentoIdentidadTipo")
                        .WithMany()
                        .HasForeignKey("DocumentoIdentidadTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.LicenciaConducirEntities.LicenciaConducir", "LicenciaConducir")
                        .WithMany()
                        .HasForeignKey("LicenciaConducirId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.General.SexoEntities.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distrito");

                    b.Navigation("DocumentoIdentidadTipo");

                    b.Navigation("LicenciaConducir");

                    b.Navigation("Sexo");
                });

            modelBuilder.Entity("nest.core.dominio.General.ProvinciaEntities.Provincia", b =>
                {
                    b.HasOne("nest.core.dominio.General.DepartamentoEntites.Departamento", "Departamento")
                        .WithMany("Provincias")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", b =>
                {
                    b.HasOne("nest.core.dominio.Legal.ContratoTipoEntities.ContratoTipo", "ContratoTipo")
                        .WithMany()
                        .HasForeignKey("ContratoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContratoTipo");
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoDetalleEntities.ContratoDetalle", b =>
                {
                    b.HasOne("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", "ContratoCabecera")
                        .WithMany("Detalles")
                        .HasForeignKey("ContratoCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContratoCabecera");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoPersonalEntities.ContratoPersonal", b =>
                {
                    b.HasOne("nest.core.dominio.RRHH.CargoEntities.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", "ContratoCabecera")
                        .WithOne("ContratoPersonal")
                        .HasForeignKey("nest.core.dominio.Legal.ContratoPersonalEntities.ContratoPersonal", "ContratoCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Corporativo.EstructuraOrganizacionalEntities.EstructuraOrganizacional", "EstructuraOrganizacional")
                        .WithMany()
                        .HasForeignKey("EstructuraOrganizacionalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("ContratoCabecera");

                    b.Navigation("EstructuraOrganizacional");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.AlmacenEN.Almacen", b =>
                {
                    b.HasOne("nest.core.dominio.General.DistritoEntities.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.Producto", b =>
                {
                    b.HasOne("nest.core.dominio.Logistica.UnidadMedida", "UnidadMedidaCompra")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Logistica.UnidadMedida", "UnidadMedidaConsumo")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaConsumoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UnidadMedidaCompra");

                    b.Navigation("UnidadMedidaConsumo");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.ProductoLote", b =>
                {
                    b.HasOne("nest.core.dominio.Finanzas.MonedaEntities.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Logistica.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Moneda");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.Transaccional.InventarioCabecera", b =>
                {
                    b.HasOne("nest.core.dominio.Logistica.AlmacenEN.Almacen", "Almacen")
                        .WithMany()
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.DocumentoTipoEntities.DocumentoTipo", "DocumentoTipo")
                        .WithMany()
                        .HasForeignKey("DocumentoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Logistica.LogisticaTransaccion", "LogisticaTransaccion")
                        .WithMany()
                        .HasForeignKey("LogisticaTransaccionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("DocumentoTipo");

                    b.Navigation("LogisticaTransaccion");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.Transaccional.InventarioDetalle", b =>
                {
                    b.HasOne("nest.core.dominio.Logistica.Transaccional.InventarioCabecera", "InventarioCabecera")
                        .WithMany("InventarioDetalles")
                        .HasForeignKey("InventarioCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Logistica.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Logistica.ProductoLote", "ProductoLote")
                        .WithMany()
                        .HasForeignKey("ProductoLoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InventarioCabecera");

                    b.Navigation("Producto");

                    b.Navigation("ProductoLote");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenServicioCabeceraEntities.OrdenServicioCabecera", b =>
                {
                    b.HasOne("nest.core.dominio.Mantto.OrdenServicioTipoEntities.OrdenServicioTipo", "OrdenServicioTipo")
                        .WithMany()
                        .HasForeignKey("OrdenServicioTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdenServicioTipo");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenServicioMantenimientoExternoEntities.OrdenServicioMantenimientoExterno", b =>
                {
                    b.HasOne("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", "ActaConformidad")
                        .WithMany()
                        .HasForeignKey("ActaConformidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.ClienteEntities.Tercero", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "ClientePlanner")
                        .WithMany()
                        .HasForeignKey("ClientePlannerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "ClienteSupervisor")
                        .WithMany()
                        .HasForeignKey("ClienteSupervisorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoCabeceraId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.Mantto.OrdenServicioCabeceraEntities.OrdenServicioCabecera", "OrdenServicioCabecera")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Mantto.MantenimientoTipoEntities.MantenimientoTipo", "MantenimientoTipo")
                        .WithMany()
                        .HasForeignKey("MantenimientoTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Finanzas.MonedaEntities.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActaConformidad");

                    b.Navigation("Cliente");

                    b.Navigation("ClientePlanner");

                    b.Navigation("ClienteSupervisor");

                    b.Navigation("Contrato");

                    b.Navigation("MantenimientoTipo");

                    b.Navigation("Moneda");

                    b.Navigation("OrdenServicioCabecera");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoCabeceraEntities.OrdenTrabajoCabecera", b =>
                {
                    b.HasOne("nest.core.dominio.RRHH.GrupoTrabajoEntities.GrupoTrabajo", "GrupoTrabajo")
                        .WithMany()
                        .HasForeignKey("GrupoTrabajoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.Mantto.OrdenServicioCabeceraEntities.OrdenServicioCabecera", "OrdenServicioCabecera")
                        .WithMany("OrdenTrabajoCabeceras")
                        .HasForeignKey("OrdenServicioCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Mantto.OrdenTrabajoCabeceraEntities.OrdenTrabajoCabecera", "OrdenTrabajoCabeceraPadre")
                        .WithMany("Children")
                        .HasForeignKey("OrdenTrabajoCabeceraPadreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GrupoTrabajo");

                    b.Navigation("OrdenServicioCabecera");

                    b.Navigation("OrdenTrabajoCabeceraPadre");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoDetalleActivoEntities.OrdenTrabajoDetalleActivo", b =>
                {
                    b.HasOne("nest.core.dominio.Patrimonial.ActivoEntities.Activo", "Activo")
                        .WithMany()
                        .HasForeignKey("ActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Mantto.OrdenTrabajoDetalleEntities.OrdenTrabajoDetalle", "OrdenTrabajoDetalle")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activo");

                    b.Navigation("OrdenTrabajoDetalle");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoDetalleEntities.OrdenTrabajoDetalle", b =>
                {
                    b.HasOne("nest.core.dominio.Mantto.LaborEntities.Labor", "Labor")
                        .WithMany()
                        .HasForeignKey("LaborId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Mantto.OrdenTrabajoCabeceraEntities.OrdenTrabajoCabecera", "OrdenTrabajoCabecera")
                        .WithMany("OrdenTrabajoDetalles")
                        .HasForeignKey("OrdenTrabajoCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Patrimonial.UbicacionTecnicaEntities.UbicacionTecnica", "UbicacionTecnica")
                        .WithMany()
                        .HasForeignKey("UbicacionTecnicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Labor");

                    b.Navigation("OrdenTrabajoCabecera");

                    b.Navigation("UbicacionTecnica");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoPersonalEntities.OrdenTrabajoPersonal", b =>
                {
                    b.HasOne("nest.core.dominio.Mantto.OrdenTrabajoCabeceraEntities.OrdenTrabajoCabecera", "OrdenTrabajoCabecera")
                        .WithMany()
                        .HasForeignKey("OrdenTrabajoCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdenTrabajoCabecera");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("nest.core.dominio.Patrimonial.ActivoEntities.Activo", b =>
                {
                    b.HasOne("nest.core.dominio.Costos.CentroDeCostosEntities.CentroDeCostos", "CentroDeCostos")
                        .WithMany()
                        .HasForeignKey("CentroDeCostosId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.Logistica.ProductoLote", "ProductoLote")
                        .WithMany()
                        .HasForeignKey("ProductoLoteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.Finanzas.ClienteEntities.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CentroDeCostos");

                    b.Navigation("ProductoLote");

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("nest.core.dominio.Patrimonial.UbicacionActivoEntities.UbicacionActivo", b =>
                {
                    b.HasOne("nest.core.dominio.Patrimonial.ActivoEntities.Activo", "Activo")
                        .WithMany()
                        .HasForeignKey("ActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", "ContratoCabecera")
                        .WithMany()
                        .HasForeignKey("ContratoCabeceraId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.Patrimonial.UbicacionTecnicaEntities.UbicacionTecnica", "UbicacionTecnica")
                        .WithMany()
                        .HasForeignKey("UbicacionTecnicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Activo");

                    b.Navigation("ContratoCabecera");

                    b.Navigation("UbicacionTecnica");
                });

            modelBuilder.Entity("nest.core.dominio.Patrimonial.UbicacionTecnicaEntities.UbicacionTecnica", b =>
                {
                    b.HasOne("nest.core.dominio.Patrimonial.UbicacionTecnicaEntities.UbicacionTecnica", "Padre")
                        .WithMany("Children")
                        .HasForeignKey("PadreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nest.core.dominio.Finanzas.ClienteEntities.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Padre");

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.GrupoTrabajoPersonaEntities.GrupoTrabajoPersona", b =>
                {
                    b.HasOne("nest.core.dominio.RRHH.GrupoTrabajoEntities.GrupoTrabajo", "GrupoTrabajo")
                        .WithMany("GrupoTrabajoPersonas")
                        .HasForeignKey("GrupoTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GrupoTrabajo");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.HorarioDetalleEntities.HorarioDetalle", b =>
                {
                    b.HasOne("nest.core.dominio.RRHH.GrupoHorarioEntities.GrupoHorario", "GrupoHorario")
                        .WithMany()
                        .HasForeignKey("GrupoHorarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.RRHH.HorarioCabeceraEntities.HorarioCabecera", "HorarioCabecera")
                        .WithMany("HorarioDetalles")
                        .HasForeignKey("HorarioCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoHorario");

                    b.Navigation("HorarioCabecera");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.PersonalEntities.Personal", b =>
                {
                    b.HasOne("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", "ContratoCabecera")
                        .WithMany()
                        .HasForeignKey("ContratoCabeceraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.RRHH.HorarioCabeceraEntities.HorarioCabecera", "HorarioCabecera")
                        .WithMany()
                        .HasForeignKey("HorarioCabeceraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.General.PersonaEntities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.RRHH.PersonalEstadoEntities.PersonalEstado", "PersonalEstado")
                        .WithMany()
                        .HasForeignKey("PersonalEstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nest.core.dominio.RRHH.PersonalEntities.Personal", "Superior")
                        .WithMany("Children")
                        .HasForeignKey("SuperiorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ContratoCabecera");

                    b.Navigation("HorarioCabecera");

                    b.Navigation("Persona");

                    b.Navigation("PersonalEstado");

                    b.Navigation("Superior");
                });

            modelBuilder.Entity("nest.core.dominio.Aplicacion.Formulario.Formulario", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("nest.core.dominio.Contabilidad.CuentaContableEntities.CuentaContable", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("nest.core.dominio.Corporativo.EstructuraOrganizacionalEntities.EstructuraOrganizacional", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("nest.core.dominio.Costos.CentroDeCostosEntities.CentroDeCostos", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("nest.core.dominio.Finanzas.FinancieroCabeceraEntities.FinancieroCabecera", b =>
                {
                    b.Navigation("FinancieroDetalles");
                });

            modelBuilder.Entity("nest.core.dominio.General.DepartamentoEntites.Departamento", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("nest.core.dominio.General.PaisEntities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("nest.core.dominio.General.ProvinciaEntities.Provincia", b =>
                {
                    b.Navigation("Distritos");
                });

            modelBuilder.Entity("nest.core.dominio.Legal.ContratoCabeceraEntities.ContratoCabecera", b =>
                {
                    b.Navigation("ContratoPersonal");

                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("nest.core.dominio.Logistica.Transaccional.InventarioCabecera", b =>
                {
                    b.Navigation("InventarioDetalles");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenServicioCabeceraEntities.OrdenServicioCabecera", b =>
                {
                    b.Navigation("OrdenTrabajoCabeceras");
                });

            modelBuilder.Entity("nest.core.dominio.Mantto.OrdenTrabajoCabeceraEntities.OrdenTrabajoCabecera", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("OrdenTrabajoDetalles");
                });

            modelBuilder.Entity("nest.core.dominio.Patrimonial.UbicacionTecnicaEntities.UbicacionTecnica", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.GrupoTrabajoEntities.GrupoTrabajo", b =>
                {
                    b.Navigation("GrupoTrabajoPersonas");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.HorarioCabeceraEntities.HorarioCabecera", b =>
                {
                    b.Navigation("HorarioDetalles");
                });

            modelBuilder.Entity("nest.core.dominio.RRHH.PersonalEntities.Personal", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
